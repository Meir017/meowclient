{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"meowclient An easy to use library to connect to Scratch . Installation Just run npm install meowclient This installs the latest version of meowclient in your package.json . Usage The library supports both CJS and ESM. In this documentation there is only ESM used. Here's how to import the ScratchSession into your code through CJS. const { ScratchSession } = require(\"meowclient\"); A basic starter program: import { ScratchSession } from \"meowclient\"; (async() => { const session = new ScratchSession(); await session.init(\"user\", \"pass\"); // change these to your scratch login credentials const me = session.getProfile(session.username); console.log(\"My status is \" + await me.getStatus()); })() Documentation is work in progress and not all things have been added yet.","title":"meowclient"},{"location":"#meowclient","text":"An easy to use library to connect to Scratch .","title":"meowclient"},{"location":"#installation","text":"Just run npm install meowclient This installs the latest version of meowclient in your package.json .","title":"Installation"},{"location":"#usage","text":"The library supports both CJS and ESM. In this documentation there is only ESM used. Here's how to import the ScratchSession into your code through CJS. const { ScratchSession } = require(\"meowclient\"); A basic starter program: import { ScratchSession } from \"meowclient\"; (async() => { const session = new ScratchSession(); await session.init(\"user\", \"pass\"); // change these to your scratch login credentials const me = session.getProfile(session.username); console.log(\"My status is \" + await me.getStatus()); })() Documentation is work in progress and not all things have been added yet.","title":"Usage"},{"location":"ScratchSession/","text":"ScratchSession The main part of meowclient. Methods init Initialises the ScratchSession to perform authenticated actions. You can perform limited actions without calling this method. Parameters user ( string ) - The username of the user you want to log in to pass ( string ) - The password of the user you want to log in to getProject Gets a project. Parameters id ( number ) - The ID of the project you want to get. Returns This returns a Project class. getProfile Gets a profile. Parameters username ( string ) - The username of the profile you want to get. Returns This returns a Profile class. logout Logs out of Scratch. Note: Currently it still keeps csrfToken , token , and sessionJSON intact. If you want to re-login, use the init method or create a new ScratchSession .","title":"ScratchSession"},{"location":"ScratchSession/#scratchsession","text":"The main part of meowclient.","title":"ScratchSession"},{"location":"ScratchSession/#methods","text":"","title":"Methods"},{"location":"ScratchSession/#init","text":"Initialises the ScratchSession to perform authenticated actions. You can perform limited actions without calling this method.","title":"init"},{"location":"ScratchSession/#parameters","text":"user ( string ) - The username of the user you want to log in to pass ( string ) - The password of the user you want to log in to","title":"Parameters"},{"location":"ScratchSession/#getproject","text":"Gets a project.","title":"getProject"},{"location":"ScratchSession/#parameters_1","text":"id ( number ) - The ID of the project you want to get.","title":"Parameters"},{"location":"ScratchSession/#returns","text":"This returns a Project class.","title":"Returns"},{"location":"ScratchSession/#getprofile","text":"Gets a profile.","title":"getProfile"},{"location":"ScratchSession/#parameters_2","text":"username ( string ) - The username of the profile you want to get.","title":"Parameters"},{"location":"ScratchSession/#returns_1","text":"This returns a Profile class.","title":"Returns"},{"location":"ScratchSession/#logout","text":"Logs out of Scratch. Note: Currently it still keeps csrfToken , token , and sessionJSON intact. If you want to re-login, use the init method or create a new ScratchSession .","title":"logout"},{"location":"classes/Profile/","text":"Profile The class to get and set a user's Scratch profile data. Accessible through ScratchSession.getProfile . Functions getStatus Gets the current status of the user. Returns Returns either Scratcher , New Scratcher , or Scratch Team . getComments Gets the comments on the user's profile. Parameters page ( number ) The page of comments to view Returns This returns an Array of ProfileComment s. [ { id: string, username: string, content: string, apiID: string, replies: [ { id: string, username: string, content: string, apiID: string }, { id: string, username: string, content: string, apiID: string } ] } ] deleteComment Deletes a comment from a profile page. Parameters id ( string or number ) The ID of the comment to delete. Must be 12345 , not comment-12345 . getUserAPI Gets the response from https://api.scratch.mit.edu/users/:user . Returns id: number, username: string, scratchteam: boolean, history: { joined: string }, profile: { id: number, images: { '90x90': string, '60x60': string, '55x55': string, '50x50': string, '32x32': string }, status: string, bio: string, country: string }","title":"Profile"},{"location":"classes/Profile/#profile","text":"The class to get and set a user's Scratch profile data. Accessible through ScratchSession.getProfile .","title":"Profile"},{"location":"classes/Profile/#functions","text":"","title":"Functions"},{"location":"classes/Profile/#getstatus","text":"Gets the current status of the user.","title":"getStatus"},{"location":"classes/Profile/#returns","text":"Returns either Scratcher , New Scratcher , or Scratch Team .","title":"Returns"},{"location":"classes/Profile/#getcomments","text":"Gets the comments on the user's profile.","title":"getComments"},{"location":"classes/Profile/#parameters","text":"page ( number ) The page of comments to view","title":"Parameters"},{"location":"classes/Profile/#returns_1","text":"This returns an Array of ProfileComment s. [ { id: string, username: string, content: string, apiID: string, replies: [ { id: string, username: string, content: string, apiID: string }, { id: string, username: string, content: string, apiID: string } ] } ]","title":"Returns"},{"location":"classes/Profile/#deletecomment","text":"Deletes a comment from a profile page.","title":"deleteComment"},{"location":"classes/Profile/#parameters_1","text":"id ( string or number ) The ID of the comment to delete. Must be 12345 , not comment-12345 .","title":"Parameters"},{"location":"classes/Profile/#getuserapi","text":"Gets the response from https://api.scratch.mit.edu/users/:user .","title":"getUserAPI"},{"location":"classes/Profile/#returns_2","text":"id: number, username: string, scratchteam: boolean, history: { joined: string }, profile: { id: number, images: { '90x90': string, '60x60': string, '55x55': string, '50x50': string, '32x32': string }, status: string, bio: string, country: string }","title":"Returns"},{"location":"classes/Project/","text":"Project The class to get and set a user's Scratch profile data. Accessible through ScratchSession.getProject . Methods getAPIData Gets the API data of the project. Returns id: number, title: string, description: string, instructions: string, visibility: string, public: boolean, comments_allowed: boolean, is_published: boolean, author: { id: number, username: string, scratchteam: boolean, history: { joined: string }, profile: { id: null | number, // unsure about this one images: { '90x90': string, '60x60': string, '55x55': string, '50x50': string, '32x32': string } } } image: string, images: { '282x218': string, '216x163': string, '200x200': string, '144x108': string, '135x102': string, '100x80': string }, history: { created: string, modified: string, shared: string }, stats: { views: number, loves: number, favorites: number, remixes: number }, remix: { parent: null | number, root: null | number } getComments Gets the comments on the project. Parameters offset ( number ) The offset of comments to return limit ( number ) The limit of comments to return Returns This fetches and returns the data from the project comments - for example from https://api.scratch.mit.edu/users/griffpatch/projects/612229554/comments?offset=0&limit=20 . Type definitions will be added soon. setTitle Sets the project title (requires you to own the project). Parameters value ( string ) The value to set the title to setInstructions Sets the project instructions (requires you to own the project). Parameters value ( string ) The value to set the instructions to setNotesAndCredits Sets the project Notes and Credits (requires you to own the project). Parameters value ( string ) The value to set the Notes and Credits to unshare Unshares the project (requires you to own the project). share Shares the project (requires you to own the project). createCloudConnection Creates a cloud connection Returns This returns a CloudConnection class.","title":"Project"},{"location":"classes/Project/#project","text":"The class to get and set a user's Scratch profile data. Accessible through ScratchSession.getProject .","title":"Project"},{"location":"classes/Project/#methods","text":"","title":"Methods"},{"location":"classes/Project/#getapidata","text":"Gets the API data of the project.","title":"getAPIData"},{"location":"classes/Project/#returns","text":"id: number, title: string, description: string, instructions: string, visibility: string, public: boolean, comments_allowed: boolean, is_published: boolean, author: { id: number, username: string, scratchteam: boolean, history: { joined: string }, profile: { id: null | number, // unsure about this one images: { '90x90': string, '60x60': string, '55x55': string, '50x50': string, '32x32': string } } } image: string, images: { '282x218': string, '216x163': string, '200x200': string, '144x108': string, '135x102': string, '100x80': string }, history: { created: string, modified: string, shared: string }, stats: { views: number, loves: number, favorites: number, remixes: number }, remix: { parent: null | number, root: null | number }","title":"Returns"},{"location":"classes/Project/#getcomments","text":"Gets the comments on the project.","title":"getComments"},{"location":"classes/Project/#parameters","text":"offset ( number ) The offset of comments to return limit ( number ) The limit of comments to return","title":"Parameters"},{"location":"classes/Project/#returns_1","text":"This fetches and returns the data from the project comments - for example from https://api.scratch.mit.edu/users/griffpatch/projects/612229554/comments?offset=0&limit=20 . Type definitions will be added soon.","title":"Returns"},{"location":"classes/Project/#settitle","text":"Sets the project title (requires you to own the project).","title":"setTitle"},{"location":"classes/Project/#parameters_1","text":"value ( string ) The value to set the title to","title":"Parameters"},{"location":"classes/Project/#setinstructions","text":"Sets the project instructions (requires you to own the project).","title":"setInstructions"},{"location":"classes/Project/#parameters_2","text":"value ( string ) The value to set the instructions to","title":"Parameters"},{"location":"classes/Project/#setnotesandcredits","text":"Sets the project Notes and Credits (requires you to own the project).","title":"setNotesAndCredits"},{"location":"classes/Project/#parameters_3","text":"value ( string ) The value to set the Notes and Credits to","title":"Parameters"},{"location":"classes/Project/#unshare","text":"Unshares the project (requires you to own the project).","title":"unshare"},{"location":"classes/Project/#share","text":"Shares the project (requires you to own the project).","title":"share"},{"location":"classes/Project/#createcloudconnection","text":"Creates a cloud connection","title":"createCloudConnection"},{"location":"classes/Project/#returns_2","text":"This returns a CloudConnection class.","title":"Returns"}]}