{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"meowclient An easy to use library to connect to Scratch . Installation Just run npm install meowclient This installs the latest version of meowclient in your package.json . Usage The library supports both CJS and ESM. In this documentation there is only ESM used. Here's how to import the ScratchSession into your code through CJS. const { ScratchSession } = require(\"meowclient\"); A basic starter program: import { ScratchSession } from \"meowclient\"; (async () => { const session = new ScratchSession(); await session.init(\"user\", \"pass\"); // change these to your scratch login credentials const me = session.getProfile(session.username); console.log(\"My status is \" + (await me.getStatus())); })(); Documentation is work in progress and not all things have been added yet.","title":"meowclient"},{"location":"#meowclient","text":"An easy to use library to connect to Scratch .","title":"meowclient"},{"location":"#installation","text":"Just run npm install meowclient This installs the latest version of meowclient in your package.json .","title":"Installation"},{"location":"#usage","text":"The library supports both CJS and ESM. In this documentation there is only ESM used. Here's how to import the ScratchSession into your code through CJS. const { ScratchSession } = require(\"meowclient\"); A basic starter program: import { ScratchSession } from \"meowclient\"; (async () => { const session = new ScratchSession(); await session.init(\"user\", \"pass\"); // change these to your scratch login credentials const me = session.getProfile(session.username); console.log(\"My status is \" + (await me.getStatus())); })(); Documentation is work in progress and not all things have been added yet.","title":"Usage"},{"location":"ScratchSession/","text":"ScratchSession The main part of meowclient. Methods init Initialises the ScratchSession to perform authenticated actions. You can perform limited actions without calling this method. Parameters user ( string ) - The username of the user you want to log in to pass ( string ) - The password of the user you want to log in to getProject Gets a project. Parameters id ( number ) - The ID of the project you want to get. Returns This returns a Project class. getProfile Gets a profile. Parameters username ( string ) - The username of the profile you want to get. Returns This returns a Profile class. getStudio Gets a studio. Parameters id ( number ) - The ID of the studio you want to get. logout Logs out of Scratch. Note: Currently it still keeps csrfToken , token , and sessionJSON intact. If you want to re-login, use the init method or create a new ScratchSession .","title":"ScratchSession"},{"location":"ScratchSession/#scratchsession","text":"The main part of meowclient.","title":"ScratchSession"},{"location":"ScratchSession/#methods","text":"","title":"Methods"},{"location":"ScratchSession/#init","text":"Initialises the ScratchSession to perform authenticated actions. You can perform limited actions without calling this method.","title":"init"},{"location":"ScratchSession/#parameters","text":"user ( string ) - The username of the user you want to log in to pass ( string ) - The password of the user you want to log in to","title":"Parameters"},{"location":"ScratchSession/#getproject","text":"Gets a project.","title":"getProject"},{"location":"ScratchSession/#parameters_1","text":"id ( number ) - The ID of the project you want to get.","title":"Parameters"},{"location":"ScratchSession/#returns","text":"This returns a Project class.","title":"Returns"},{"location":"ScratchSession/#getprofile","text":"Gets a profile.","title":"getProfile"},{"location":"ScratchSession/#parameters_2","text":"username ( string ) - The username of the profile you want to get.","title":"Parameters"},{"location":"ScratchSession/#returns_1","text":"This returns a Profile class.","title":"Returns"},{"location":"ScratchSession/#getstudio","text":"Gets a studio.","title":"getStudio"},{"location":"ScratchSession/#parameters_3","text":"id ( number ) - The ID of the studio you want to get.","title":"Parameters"},{"location":"ScratchSession/#logout","text":"Logs out of Scratch. Note: Currently it still keeps csrfToken , token , and sessionJSON intact. If you want to re-login, use the init method or create a new ScratchSession .","title":"logout"},{"location":"classes/CloudConnection/","text":"CloudConnection The class to use cloud variables. Accessible through Project.createCloudConnection . Methods setVariable Sets a cloud variable Parameters variable ( string ) The variable name value ( string | number ) The value to set the variable to getVariable Gets a cloud variable Parameters variable ( string ) The variable name Returns This returns a string containing the value of the variable. close Closes the cloud connection. Properties variables Returns an object with the cloud variable data. connection Returns a websocket connection. This uses the ws library.","title":"CloudConnection"},{"location":"classes/CloudConnection/#cloudconnection","text":"The class to use cloud variables. Accessible through Project.createCloudConnection .","title":"CloudConnection"},{"location":"classes/CloudConnection/#methods","text":"","title":"Methods"},{"location":"classes/CloudConnection/#setvariable","text":"Sets a cloud variable","title":"setVariable"},{"location":"classes/CloudConnection/#parameters","text":"variable ( string ) The variable name value ( string | number ) The value to set the variable to","title":"Parameters"},{"location":"classes/CloudConnection/#getvariable","text":"Gets a cloud variable","title":"getVariable"},{"location":"classes/CloudConnection/#parameters_1","text":"variable ( string ) The variable name","title":"Parameters"},{"location":"classes/CloudConnection/#returns","text":"This returns a string containing the value of the variable.","title":"Returns"},{"location":"classes/CloudConnection/#close","text":"Closes the cloud connection.","title":"close"},{"location":"classes/CloudConnection/#properties","text":"","title":"Properties"},{"location":"classes/CloudConnection/#variables","text":"Returns an object with the cloud variable data.","title":"variables"},{"location":"classes/CloudConnection/#connection","text":"Returns a websocket connection. This uses the ws library.","title":"connection"},{"location":"classes/Forums/","text":"Forums Access the Scratch forums through meowclient! getForum Gets a forum. Accessible with ScratchSession.getForum . Parameters id ( number ): The id of the forum. If not provided, only a few options will work. Returns A Forum object. Forum getTopics (Promise) Gets the topics in the forum. Only works when id is provided. Returns An array of Topic objects. getTopic Gets a topic. Parameters id ( number ): The id of the topic. Returns A Topic object. Topic getPosts (Promise) Gets the posts in the topic. Returns An array of Post objects. follow (Promise) Follows the topic. Returns A Response object. unfollow (Promise) Unfollows the topic. Returns A Response object. Post id ( number ): The id of the post. author ( string ): The author of the post. content ( string ): The content of the post. parsableContent ( HTMLElement ): Parsable content with node-html-parser . time ( Date ): The time the post was created. edit (Promise) Edits the post. Returns A Response object.","title":"Forums"},{"location":"classes/Forums/#forums","text":"Access the Scratch forums through meowclient!","title":"Forums"},{"location":"classes/Forums/#getforum","text":"Gets a forum. Accessible with ScratchSession.getForum .","title":"getForum"},{"location":"classes/Forums/#parameters","text":"id ( number ): The id of the forum. If not provided, only a few options will work.","title":"Parameters"},{"location":"classes/Forums/#returns","text":"A Forum object.","title":"Returns"},{"location":"classes/Forums/#forum","text":"","title":"Forum"},{"location":"classes/Forums/#gettopics-promise","text":"Gets the topics in the forum. Only works when id is provided.","title":"getTopics (Promise)"},{"location":"classes/Forums/#returns_1","text":"An array of Topic objects.","title":"Returns"},{"location":"classes/Forums/#gettopic","text":"Gets a topic.","title":"getTopic"},{"location":"classes/Forums/#parameters_1","text":"id ( number ): The id of the topic.","title":"Parameters"},{"location":"classes/Forums/#returns_2","text":"A Topic object.","title":"Returns"},{"location":"classes/Forums/#topic","text":"","title":"Topic"},{"location":"classes/Forums/#getposts-promise","text":"Gets the posts in the topic.","title":"getPosts (Promise)"},{"location":"classes/Forums/#returns_3","text":"An array of Post objects.","title":"Returns"},{"location":"classes/Forums/#follow-promise","text":"Follows the topic.","title":"follow (Promise)"},{"location":"classes/Forums/#returns_4","text":"A Response object.","title":"Returns"},{"location":"classes/Forums/#unfollow-promise","text":"Unfollows the topic.","title":"unfollow (Promise)"},{"location":"classes/Forums/#returns_5","text":"A Response object.","title":"Returns"},{"location":"classes/Forums/#post","text":"id ( number ): The id of the post. author ( string ): The author of the post. content ( string ): The content of the post. parsableContent ( HTMLElement ): Parsable content with node-html-parser . time ( Date ): The time the post was created.","title":"Post"},{"location":"classes/Forums/#edit-promise","text":"Edits the post.","title":"edit (Promise)"},{"location":"classes/Forums/#returns_6","text":"A Response object.","title":"Returns"},{"location":"classes/Profile/","text":"Profile The class to get and set a user's Scratch profile data. Accessible through ScratchSession.getProfile . Functions getStatus Gets the current status of the user. Returns Returns either Scratcher , New Scratcher , or Scratch Team . getComments Gets the comments on the user's profile. Parameters page ( number ) The page of comments to view Returns This returns an Array of ProfileComment s. [ { id: string, username: string, content: string, apiID: string, replies: [ { id: string, username: string, content: string, apiID: string }, { id: string, username: string, content: string, apiID: string } ] } ]; deleteComment Deletes a comment from the user's profile page. Parameters id ( string or number ) The ID of the comment to delete. Must be 12345 , not comment-12345 . getUserAPI Gets the response from https://api.scratch.mit.edu/users/:user . Returns id: number, username: string, scratchteam: boolean, history: { joined: string }, profile: { id: number, images: { '90x90': string, '60x60': string, '55x55': string, '50x50': string, '32x32': string }, status: string, bio: string, country: string }","title":"Profile"},{"location":"classes/Profile/#profile","text":"The class to get and set a user's Scratch profile data. Accessible through ScratchSession.getProfile .","title":"Profile"},{"location":"classes/Profile/#functions","text":"","title":"Functions"},{"location":"classes/Profile/#getstatus","text":"Gets the current status of the user.","title":"getStatus"},{"location":"classes/Profile/#returns","text":"Returns either Scratcher , New Scratcher , or Scratch Team .","title":"Returns"},{"location":"classes/Profile/#getcomments","text":"Gets the comments on the user's profile.","title":"getComments"},{"location":"classes/Profile/#parameters","text":"page ( number ) The page of comments to view","title":"Parameters"},{"location":"classes/Profile/#returns_1","text":"This returns an Array of ProfileComment s. [ { id: string, username: string, content: string, apiID: string, replies: [ { id: string, username: string, content: string, apiID: string }, { id: string, username: string, content: string, apiID: string } ] } ];","title":"Returns"},{"location":"classes/Profile/#deletecomment","text":"Deletes a comment from the user's profile page.","title":"deleteComment"},{"location":"classes/Profile/#parameters_1","text":"id ( string or number ) The ID of the comment to delete. Must be 12345 , not comment-12345 .","title":"Parameters"},{"location":"classes/Profile/#getuserapi","text":"Gets the response from https://api.scratch.mit.edu/users/:user .","title":"getUserAPI"},{"location":"classes/Profile/#returns_2","text":"id: number, username: string, scratchteam: boolean, history: { joined: string }, profile: { id: number, images: { '90x90': string, '60x60': string, '55x55': string, '50x50': string, '32x32': string }, status: string, bio: string, country: string }","title":"Returns"},{"location":"classes/Project/","text":"Project Used for Scratch projects. Accessible through ScratchSession.getProject . Methods getAPIData Gets the API data of the project. Returns id: number, title: string, description: string, instructions: string, visibility: string, public: boolean, comments_allowed: boolean, is_published: boolean, author: { id: number, username: string, scratchteam: boolean, history: { joined: string }, profile: { id: null | number, // unsure about this one images: { '90x90': string, '60x60': string, '55x55': string, '50x50': string, '32x32': string } } } image: string, images: { '282x218': string, '216x163': string, '200x200': string, '144x108': string, '135x102': string, '100x80': string }, history: { created: string, modified: string, shared: string }, stats: { views: number, loves: number, favorites: number, remixes: number }, remix: { parent: null | number, root: null | number } getComments Gets the comments on the project. Parameters offset ( number ) The offset of comments to return limit ( number ) The limit of comments to return Returns An array of id: number; parent_id: null | number; commentee_id: null | number; content: string; datetime_created: string; datetime_modified: string; visibility: \"visible\" | \"hidden\"; author: { id: number; username: string; scratchteam: boolean; image: string; } setTitle Sets the project title (requires you to own the project). Parameters value ( string ) The value to set the title to setInstructions Sets the project instructions (requires you to own the project). Parameters value ( string ) The value to set the instructions to setNotesAndCredits Sets the project Notes and Credits (requires you to own the project). Parameters value ( string ) The value to set the Notes and Credits to unshare Unshares the project (requires you to own the project). share Shares the project (requires you to own the project). createCloudConnection Creates a cloud connection Returns This returns a CloudConnection class.","title":"Project"},{"location":"classes/Project/#project","text":"Used for Scratch projects. Accessible through ScratchSession.getProject .","title":"Project"},{"location":"classes/Project/#methods","text":"","title":"Methods"},{"location":"classes/Project/#getapidata","text":"Gets the API data of the project.","title":"getAPIData"},{"location":"classes/Project/#returns","text":"id: number, title: string, description: string, instructions: string, visibility: string, public: boolean, comments_allowed: boolean, is_published: boolean, author: { id: number, username: string, scratchteam: boolean, history: { joined: string }, profile: { id: null | number, // unsure about this one images: { '90x90': string, '60x60': string, '55x55': string, '50x50': string, '32x32': string } } } image: string, images: { '282x218': string, '216x163': string, '200x200': string, '144x108': string, '135x102': string, '100x80': string }, history: { created: string, modified: string, shared: string }, stats: { views: number, loves: number, favorites: number, remixes: number }, remix: { parent: null | number, root: null | number }","title":"Returns"},{"location":"classes/Project/#getcomments","text":"Gets the comments on the project.","title":"getComments"},{"location":"classes/Project/#parameters","text":"offset ( number ) The offset of comments to return limit ( number ) The limit of comments to return","title":"Parameters"},{"location":"classes/Project/#returns_1","text":"An array of id: number; parent_id: null | number; commentee_id: null | number; content: string; datetime_created: string; datetime_modified: string; visibility: \"visible\" | \"hidden\"; author: { id: number; username: string; scratchteam: boolean; image: string; }","title":"Returns"},{"location":"classes/Project/#settitle","text":"Sets the project title (requires you to own the project).","title":"setTitle"},{"location":"classes/Project/#parameters_1","text":"value ( string ) The value to set the title to","title":"Parameters"},{"location":"classes/Project/#setinstructions","text":"Sets the project instructions (requires you to own the project).","title":"setInstructions"},{"location":"classes/Project/#parameters_2","text":"value ( string ) The value to set the instructions to","title":"Parameters"},{"location":"classes/Project/#setnotesandcredits","text":"Sets the project Notes and Credits (requires you to own the project).","title":"setNotesAndCredits"},{"location":"classes/Project/#parameters_3","text":"value ( string ) The value to set the Notes and Credits to","title":"Parameters"},{"location":"classes/Project/#unshare","text":"Unshares the project (requires you to own the project).","title":"unshare"},{"location":"classes/Project/#share","text":"Shares the project (requires you to own the project).","title":"share"},{"location":"classes/Project/#createcloudconnection","text":"Creates a cloud connection","title":"createCloudConnection"},{"location":"classes/Project/#returns_2","text":"This returns a CloudConnection class.","title":"Returns"},{"location":"classes/Studio/","text":"Studio Gets a studio. Accessible through ScratchSession.getStudio . Functions getAPIData Gets the API data for the studio. setTitle Sets the title of the studio. Parameters value ( string ) The value to set the title to. Returns A Response object. setDescription Sets the description of the studio. Parameters value ( string ) The value to set the description to. Returns A Response object. inviteCurator Invites a user to be a curator of the studio. Parameters username ( string ) The username of the user to invite. Returns A Response object. removeCurator Removes a user from the studio. Parameters username ( string ) The username of the user to remove. Returns A Response object. addProject Adds a project to the studio. Parameters project ( number ) The ID of the project to add. Returns A Response object. removeProject Removes a project from the studio. Parameters project ( number ) The ID of the project to remove. Returns A Response object. getCurators Gets the curators of the studio. Parameters limit ( number ) The maximum number of curators to return. offset ( number ) The offset of the curators to return. Returns A Promise that resolves to an array of User objects (which are curators). getManagers Gets the managers of the studio. Parameters limit ( number ) The maximum number of managers to return. offset ( number ) The offset of the managers to return. Returns A Promise that resolves to an array of User objects (which are managers). getProjects Gets the projects in the studio. Parameters limit ( number ) The maximum number of projects to return. offset ( number ) The offset of the projects to return. Returns A Promise that resolves to an array containing: interface OldProjectResponse { id: number; title: string; image: string; creator_id: number; username: string; avatar: { \"90x90\": string; \"60x60\": string; \"55x55\": string; \"50x50\": string; \"32x32\": string; }; actor_id: number; }","title":"Studio"},{"location":"classes/Studio/#studio","text":"Gets a studio. Accessible through ScratchSession.getStudio .","title":"Studio"},{"location":"classes/Studio/#functions","text":"","title":"Functions"},{"location":"classes/Studio/#getapidata","text":"Gets the API data for the studio.","title":"getAPIData"},{"location":"classes/Studio/#settitle","text":"Sets the title of the studio.","title":"setTitle"},{"location":"classes/Studio/#parameters","text":"value ( string ) The value to set the title to.","title":"Parameters"},{"location":"classes/Studio/#returns","text":"A Response object.","title":"Returns"},{"location":"classes/Studio/#setdescription","text":"Sets the description of the studio.","title":"setDescription"},{"location":"classes/Studio/#parameters_1","text":"value ( string ) The value to set the description to.","title":"Parameters"},{"location":"classes/Studio/#returns_1","text":"A Response object.","title":"Returns"},{"location":"classes/Studio/#invitecurator","text":"Invites a user to be a curator of the studio.","title":"inviteCurator"},{"location":"classes/Studio/#parameters_2","text":"username ( string ) The username of the user to invite.","title":"Parameters"},{"location":"classes/Studio/#returns_2","text":"A Response object.","title":"Returns"},{"location":"classes/Studio/#removecurator","text":"Removes a user from the studio.","title":"removeCurator"},{"location":"classes/Studio/#parameters_3","text":"username ( string ) The username of the user to remove.","title":"Parameters"},{"location":"classes/Studio/#returns_3","text":"A Response object.","title":"Returns"},{"location":"classes/Studio/#addproject","text":"Adds a project to the studio.","title":"addProject"},{"location":"classes/Studio/#parameters_4","text":"project ( number ) The ID of the project to add.","title":"Parameters"},{"location":"classes/Studio/#returns_4","text":"A Response object.","title":"Returns"},{"location":"classes/Studio/#removeproject","text":"Removes a project from the studio.","title":"removeProject"},{"location":"classes/Studio/#parameters_5","text":"project ( number ) The ID of the project to remove.","title":"Parameters"},{"location":"classes/Studio/#returns_5","text":"A Response object.","title":"Returns"},{"location":"classes/Studio/#getcurators","text":"Gets the curators of the studio.","title":"getCurators"},{"location":"classes/Studio/#parameters_6","text":"limit ( number ) The maximum number of curators to return. offset ( number ) The offset of the curators to return.","title":"Parameters"},{"location":"classes/Studio/#returns_6","text":"A Promise that resolves to an array of User objects (which are curators).","title":"Returns"},{"location":"classes/Studio/#getmanagers","text":"Gets the managers of the studio.","title":"getManagers"},{"location":"classes/Studio/#parameters_7","text":"limit ( number ) The maximum number of managers to return. offset ( number ) The offset of the managers to return.","title":"Parameters"},{"location":"classes/Studio/#returns_7","text":"A Promise that resolves to an array of User objects (which are managers).","title":"Returns"},{"location":"classes/Studio/#getprojects","text":"Gets the projects in the studio.","title":"getProjects"},{"location":"classes/Studio/#parameters_8","text":"limit ( number ) The maximum number of projects to return. offset ( number ) The offset of the projects to return.","title":"Parameters"},{"location":"classes/Studio/#returns_8","text":"A Promise that resolves to an array containing: interface OldProjectResponse { id: number; title: string; image: string; creator_id: number; username: string; avatar: { \"90x90\": string; \"60x60\": string; \"55x55\": string; \"50x50\": string; \"32x32\": string; }; actor_id: number; }","title":"Returns"}]}